mkdir django_test
cd django_test
django-admin startproject mytestsite
cd mytestsite
py manage.py runserver
PARAR SERVIDOR CTRL + C
na mesma pasta que está o manage.py: py manage.py startapp catalog
locallibrary/locallibrary/settings.py: INSTALLED_APPS = [ acrescentar: 'catalog.apps.CatalogConfig', 
										DATABASES = {
														'default': {
															'ENGINE': 'django.db.backends.sqlite3',
															'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
														}
													}
													
TIME_ZONE = 'America/Sao_Paulo'

Abra locallibrary/locallibrary/urls.py: 
				# Use include() to add paths from the catalog application 
				from django.conf.urls import include
				from django.urls import path

				urlpatterns += [
					path('catalog/', include('catalog.urls')),
				]
				
				#Add URL maps to redirect the base URL to our application
				from django.views.generic import RedirectView
				urlpatterns += [
					path('', RedirectView.as_view(url='/catalog/')),
				]				
				
				# Use static() to add url mapping to serve static files during development (only)
				from django.conf import settings
				from django.conf.urls.static import static

				urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)				
				
***************   OU				******************
urlpatterns = [
    path('admin/', admin.site.urls),
    path('catalog/', include('catalog.urls')),
    path('', RedirectView.as_view(url='/catalog/', permanent=True)),
] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)


crie um arquivo dentro da pasta catalog e dê o nome urls.py

	from django.urls import path
	from catalog import views

	urlpatterns = [

	]
no diretório que contém o arquivo manage.py: 
py manage.py makemigrations
py manage.py migrate	
	
Part 3: Using models

	
	
	
	
	